<p id="variant-sku">SKU: {{ product.variants.first.sku }}</p>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const skuDisplay = document.getElementById('variant-sku');
    const variantIdInput = document.querySelector('[name="id"]');
    const productData = {{ product | json }};

    function updateSkuById(variantId) {
      const variant = productData.variants.find(v => v.id == variantId);
      if (variant) {
        skuDisplay.textContent = variant.sku ? 'SKU: ' + variant.sku : 'SKU: N/A';
        if (variantIdInput) variantIdInput.value = variant.id;
        history.replaceState(null, '', `?variant=${variant.id}`); // optional: update URL without reload
      }
    }

    // Handle initial URL variant param
    const params = new URLSearchParams(window.location.search);
    const variantFromUrl = params.get('variant');
    if (variantFromUrl) {
      const radio = document.querySelector(`.custom-variant__inputs[value="${variantFromUrl}"]`);
      if (radio) {
        radio.checked = true;
        updateSkuById(variantFromUrl);
      }
    } else {
      // Fallback: Use currently checked input
      const checkedInput = document.querySelector('.custom-variant__inputs:checked');
      if (checkedInput) updateSkuById(checkedInput.value);
    }

    // Watch for variant change manually
    document.querySelectorAll('.custom-variant__inputs').forEach(input => {
      input.addEventListener('change', function () {
        updateSkuById(this.value);
      });
    });

    // Also observe theme-internal variant change via MutationObserver (if your theme replaces hidden input)
    const observer = new MutationObserver(() => {
      const newId = variantIdInput?.value;
      if (newId) updateSkuById(newId);
    });

    if (variantIdInput) {
      observer.observe(variantIdInput, { attributes: true, attributeFilter: ['value'] });
    }
  });
</script>
