{%- render 'section-spacing-collapsing' -%}

{%- comment -%}
------------------------------------------------------------------------------------------------------------------------
LIQUID
------------------------------------------------------------------------------------------------------------------------
{%- endcomment -%}
<!-- CSS to Hide Scrollbar -->
<style>
  #scroll-area-{{ section.id }} {
    -ms-overflow-style: none; /* Hide scrollbar for Internet Explorer and Edge */
    scrollbar-width: none; /* Hide scrollbar for Firefox */
  }

  #scroll-area-{{ section.id }}::-webkit-scrollbar {
    display: none; /* Hide scrollbar for Chrome, Safari, and Opera */
  }
</style>

<div {% render 'section-properties' %} class="x:w-full x:h-[620px] x:bg-white" style="--section-spacing-block-start: 30px; --section-spacing-block-end: 20px;">
  <!-- Header Section -->
  <div class="x:flex x:items-center x:justify-between">
    <!-- Centered Header -->
  <p style="font-family: 'GFSDidot', serif; font-size: 32px;" class="x:text-center x:flex-grow">
    {{ section.settings.title | default: 'BEAUTIFUL CELEBRATIONS START HERE' }}
  </p>
    <!-- Navigation Buttons -->
    <div class="x:flex x:gap-4 pc" 
      style="
        position: absolute;
        right: 40px;"
      >
      <button
        is="prev-button"
        class="x:w-12 x:h-12 x:border x:border-black x:flex x:items-center x:justify-center 
               x:hover:border-2 x:hover:scale-110 x:transition-all x:duration-300 
               disabled:x:opacity-30 disabled:x:cursor-not-allowed"
        aria-controls="scroll-area-{{ section.id }}"
      >
        {%- render 'icon' with 'chevron-left' -%}
      </button>
    
      <button
        is="next-button"
        class="x:w-12 x:h-12 x:border x:border-black x:flex x:items-center x:justify-center 
               x:hover:border-2 x:hover:scale-110 x:transition-all x:duration-300 
               disabled:x:opacity-30 disabled:x:cursor-not-allowed"
        aria-controls="scroll-area-{{ section.id }}"
      >
        {%- render 'icon' with 'chevron-right' -%}
      </button>
    </div>

  </div>

  <!-- Collection List Section with Scrollable Carousel -->
  <div class="x:mt-8 x:overflow-hidden">
    <div id="scroll-area-{{ section.id }}" class="x:flex x:gap-6 x:overflow-x-auto x:scroll-smooth" style="scroll-snap-type: x mandatory; max-height: 300px;">
      {%- for block in section.blocks -%}
        {%- assign collection = block.settings.collection -%}
        {%- assign collection_url = block.settings.url | default: collection.url -%}

        <!-- Responsive width for 3 items per page -->
        <a {% if collection_url != blank %} href="{{ collection_url }}" {% endif %}
           class="collection-card x:w-[calc(33.333%-1.5rem)] sm:x:w-[calc(50%-1.5rem)] x:shrink-0 x:overflow-hidden x:rounded-md">
           <div class=" x:w-full x:h-[500px] x:overflow-hidden">
             <!-- Bottom Overlay -->
             {% comment %} <div class="x:absolute x:bottom-0 x:left-0 x:w-full x:h-12 x:bg-black x:z-10"></div> {% endcomment %}
            {%- assign image = block.settings.image | default: collection.featured_image -%}
            {%- if image != blank -%}
              <img src="{{ image | image_url: width: image.width }}" alt="{{ block.settings.title | default: collection.title }}" class="x:w-full x:h-full x:object-cover" loading="lazy" />
            {%- else -%}
              <span>No Image Available</span>
            {%- endif -%}
          
          </div>
          
         <p style="font-family: 'GFSDidot', serif;" class="x:text-center x:mt-4 x:text-[24px] x:font-normal">
          {{ block.settings.title | default: collection.title }}
         </p>
        </a>
      {%- endfor -%}
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const scrollArea = document.getElementById('scroll-area-{{ section.id }}');
    const prevButton = document.querySelector('button[is="prev-button"]');
    const nextButton = document.querySelector('button[is="next-button"]');

    function updateButtonStates() {
      const maxScrollLeft = scrollArea.scrollWidth - scrollArea.clientWidth;

      // Handle prev button
      if (scrollArea.scrollLeft <= 0) {
        prevButton.disabled = true;
      } else {
        prevButton.disabled = false;
      }

      // Handle next button
      if (scrollArea.scrollLeft >= maxScrollLeft - 1) {
        nextButton.disabled = true;
      } else {
        nextButton.disabled = false;
      }
    }

    function scrollCollections(direction) {
      const card = scrollArea.querySelector('.collection-card');
      if (!card) return;

      const cardWidth = card.offsetWidth + 24;
      scrollArea.scrollBy({
        left: cardWidth * direction,
        behavior: 'smooth'
      });

      // Delay state update slightly to let scroll happen
      setTimeout(updateButtonStates, 300);
    }

    // Event listeners
    prevButton.addEventListener('click', () => scrollCollections(-1));
    nextButton.addEventListener('click', () => scrollCollections(1));
    scrollArea.addEventListener('scroll', updateButtonStates);

    // Initial state check
    updateButtonStates();
  });
</script>





{% schema %}
{
  "name": "Custom Collection List",
  "class": "shopify-section--collection-list",
  "tag": "section",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Heading",
      "default": "BEAUTIFUL CELEBRATIONS START HERE"
    }
  ],
  "blocks": [
    {
      "type": "collection",
      "name": "Collection",
      "settings": [
        {
          "type": "collection",
          "id": "collection",
          "label": "Select Collection"
        },
        {
          "type": "image_picker",
          "id": "image",
          "label": "Custom Image (Optional)"
        },
        {
          "type": "text",
          "id": "title",
          "label": "Custom Title (Optional)"
        },
        {
          "type": "url",
          "id": "url",
          "label": "Custom URL (Optional)"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Custom Collection List",
      "blocks": [
        {
          "type": "collection"
        },
        {
          "type": "collection"
        },
        {
          "type": "collection"
        }
      ]
    }
  ]
}
{% endschema %}
